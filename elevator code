import edu.wpi.first.math.MathUtil;
import edu.wpi.first.wpilibj.DriverStation;
import frc.robot.commons.LoggedTunableNumber;

import edu.wpi.first.wpilibj.DriverStation;
import frc.robot.commons.LoggedTunableNumber;



public class ElevatorTalonFX implements ElevatorIO{ 
         TalonFX leader = new TalonFX(ELEVATOR_LEFT_ID,CARNIVORE_BUS_NAME);
         TalonFX follower = new TalonFX(ELEVATOR_RIGHT_ID,CARNIVORE_BUS_NAME);

         LoggedTunableNumber kP=  new LoggedTunableNumber ("Elevator/kP",);
         LoggedTunableNumber kD=  new LoggedTunableNumber  ("Elevator/kD",);
         LoggedTunableNumber kForwardsKa = new LoggedTunableNumber("Elevator/kForwardskA", 0.01);
         LoggedTunableNumber kBackwardsKa = new LoggedTunableNumber("Elevator/kBackwardskA", 0.005);

         double lastVelocityTarget = 0.0;
         double mLastCommandedPosition = 0.0;  

public ElevatorIOTalonFX() {
        TalonFXConfiguration leaderConfig = new TalonFXConfiguration();
        leaderConfig.slot0.kP = integratedSensorUnitsToMeters(kP.get()) * 1023.0;
        leaderConfig.slot0.kI = integratedSensorUnitsToMeters(0) * 1023.0;
        leaderConfig.slot0.kD = integratedSensorUnitsToMetersPerSecond(kD.get()) * 1023.0;
        leaderConfig.voltageCompSaturation = 10.5;
        leaderConfig.neutralDeadband = 0.001;
        leaderConfig.statorCurrLimit = new StatorCurrentLimitConfiguration(true, 100, 100, 1.5);
        leader.setInverted(ELEVATOR_LEFT_INVERT_TYPE);
        leader.setNeutralMode(NeutralMode.Coast);
        leader.enableVoltageCompensation(true);

        TalonFXConfiguration followerConfig = new TalonFXConfiguration();
        followerConfig.neutralDeadband = 0.001;
        followerConfig.statorCurrLimit = new StatorCurrentLimitConfiguration(true, 100, 100, 1.5);
        follower.configAllSettings(followerConfig);
        follower.follow(leader);
        follower.setInverted(ELEVATOR_RIGHT_INVERT_TYPE);
        follower.setStatusFramePeriod(StatusFrame.Status_1_General, 197);
        follower.setNeutralMode(NeutralMode.Coast);
        follower.setStatusFramePeriod(StatusFrame.Status_2_Feedback0, 193);
